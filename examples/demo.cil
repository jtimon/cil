// basic bools and multiple lines

aaa := and(false true false)
bbb := or(false true false)
// and := true // fails, double declaration
// aaa := true // fails, double declaration
main := and(bbb or(false false aaa) true)

// TODO next:

myfunc := func(a, b) returns bool {
    return and(a, b)
}

// myproc := proc(a, b) returns bool {
//     return print(myfunc(a, b))
// }

// my_num := 1111
// and(true my_num) // fails, and cannot take number literals

// my_str := "asdfgdfafgd"
// and(true my_str) // fails, and cannot take string literals

// FIX literals have to work in the repl
// "aaa"
// 1111
// true
// false


// TODO should error on comptime
// and("aaa" or(true) true)


// (true (true 1111 "1a" aaa) (false 2222 "2b" bbb))

// TODO runtime: 'and' only takes bool
// and(1 2 3))

// TODO runtime and only takes bool
// add(1 2 3)

// TODO decide: use commas?
// add(1 add(2 3 4) 5 6)

// def(aaa true)

// println(true or(false true) true)

// test(true true "true should be true")

// test_assert(true true "true should be true");
// test_assert(true not(false) "true should not be false");
// test_err(print(true) "Procedure 'print' can't be used as primary expression.");
