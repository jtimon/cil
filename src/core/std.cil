mode lib

import("src/core/pure_std")

eval_to_str     := ext_proc(a: Str) returns Str;
eval_to_ast_str := ext_proc(src: Str) returns Str; // TODO
eval_to_expr    := ext_proc(src: Str) returns Expr; // TODO

input_read_line := ext_proc(a: Str) returns Str;
readfile        := ext_proc(path: Str) returns Str;
writefile       := ext_proc(path: Str, contents: Str) returns Str; // TODO
runfile         := ext_proc(args: ..Str);

panic2 := proc(loc_str: Str, msgs: ..Str) {
    // TODO use variadic args in user defined functions. requires arrays
    exit(1)
}

assertm := proc(loc_str: Str, cond: Bool, msg: Str) {
    // if not(1) { // Uncomment to test import error messages
    if not(cond) {
        panic(loc_str, format("assert failed: ", msg))
    }
}

assert := proc(loc_str: Str, cond: Bool) {
    assertm(loc_str, cond, "")
}

TODO := proc(loc_str: Str, msg: Str) {
    print("TODO: ")
    assertm(loc_str, false, msg)
}
