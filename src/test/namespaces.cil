mode test

// Struct definitions can be used as namespaces by declaring only constants in them (no mut)
MyNamespace := struct {

    field_static_str : String = "hello MyNamespace.field_static_str"
    field_static_bool : bool = true
    field_static_int : i64 = 42

    proc_static := proc() {
        return "func 'proc_static' in struct 'MyNamespace' is being called"
    }

    func_static_str := func() returns String {
        return "func 'func_static_str' in struct 'MyNamespace' has been called"
    }
}

println("field 'field_static_str' in struct 'MyNamespace' is being accessed: ", MyNamespace.field_static_str)
println("field 'field_static_int' in struct 'MyNamespace' is being accessed: ", i64.to_str(MyNamespace.field_static_int))
println("field 'field_static_bool' in struct 'MyNamespace' is being accessed: ", bool.to_str(MyNamespace.field_static_bool))
// MyNamespace.proc_static() // TODO method calls as statements
// temp_str := MyNamespace.func_static_str() // TODO method calls as primary expr in declaration
// println(temp_str)
// println(MyNamespace.func_static_str()) // TODO method calls as primary expr as argument
