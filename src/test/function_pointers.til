mode test

// function_pointer_test := proc() {
//     // Declare a BinaryIntFunc type for functions that take two I64 and return an I64
//     BinaryIntFunc := func(a: I64, b: I64) returns I64;

//     // Define a function that takes a BinaryIntFunc and two I64 arguments
//     bin_op_i64 := func(op: BinaryIntFunc, a: I64, b: I64) returns I64 {
//         return op(a, b)
//     };

//     // Define an add function of type BinaryIntFunc
//     // add2 : BinaryIntFunc = func(a: I64, b: I64) returns I64 { // TODO FIX syntax
//     add2 := func(a: I64, b: I64) returns I64 {
//         return a.add(b)
//     };

//     // Define a subtract function of type BinaryIntFunc
//     // subtract : BinaryIntFunc = func(a: I64, b: I64) returns I64 { // TODO FIX syntax
//     subtract := func(a: I64, b: I64) returns I64 {
//         return a.sub(b)
//     };

//     assert_eq(8, bin_op_i64(add2, 3, 5))
//     assert_eq(6, bin_op_i64(subtract, 10, 4))
// }
// function_pointer_test() // TODO Implement
