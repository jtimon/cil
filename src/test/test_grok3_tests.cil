mode test

// Test is_zero:
test(is_zero(0), "is_zero(0) = true")
test(not(is_zero(5)), "is_zero(5) = false")

// More verbose tests:
test(I64.eq(Bool.to_int(is_zero(0)), 1), "eq(Bool.to_int(is_zero(0)), 1) = true")
test(I64.eq(Bool.to_int(is_zero(5)), 0), "eq(Bool.to_int(is_zero(5)), 0) = false")

// Increment tests
test(I64.eq(increment(5), 6), "increment(5) = 6")
test(I64.eq(increment(0), 1), "increment(0) = 1")

// Subtraction test
test(I64.eq(decrement(5), 4), "decrement(5) = 4")

// Local functions only for testing:

// Simple function with a condition
is_zero := func(x: I64) returns Bool {
    return I64.eq(x, 0)
}

// Simple addition function
increment := func(x: I64) returns I64 {
    return add(x, 1)
}

// Simple subtraction function
decrement := func(x: I64) returns I64 {
    return sub(x, 1)
}
