mode test

concat2 := proc(args: ..Str) returns Str {
    mut result := ""
    for i in 0..args.len {
        result = format(result, args.get(i))
    }
    return result

    catch(err: I64_OverflowError) {
        println(loc(), "I64_OverflowError thrown:")
        println(err.msg)
    }
    catch(err: IndexOutOfBoundsError) {
        println(loc(), "concat2: IndexOutOfBoundsError thrown:")
        println(err.msg)
    }
    catch(err: AllocError) {
        println(loc(), "AllocError thrown:")
        println(err.msg)
    }
}
assert_eq_str(loc(), "Variadic: foobarbaz", concat2("Variadic: ", "foo", "bar", "baz"))

var_i64_add := proc(args: ..I64) returns I64 {
    mut result := 0
    for i in 0..args.len {
        result = result.add(args.get(i))
    }
    return result

    catch(err: IndexOutOfBoundsError) {
        println(loc(), "var_i64_add: IndexOutOfBoundsError thrown:")
        println(err.msg)
    }
}
assert_eq(loc(), add(34, 35), var_i64_add(34, 35))

var_u8_add := proc(args: ..U8) returns U8 {
    mut result : U8 = 0
    for i in 0..args.len {
        result = result.u8_add(args.get(i))
    }
    return result

    catch(err: IndexOutOfBoundsError) {
        println(loc(), "var_i64_add: IndexOutOfBoundsError thrown:")
        println(err.msg)
    }
    catch(err: U8_OverflowError) {
        println(loc(), "var_i64_add: U8_OverflowError thrown:")
        println(err.msg)
    }
}
assert_eq(loc(), add(34, 35), U8.to_i64(var_u8_add(U8.from_i64(34), U8.from_i64(35))))
