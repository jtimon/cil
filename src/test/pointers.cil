mode test

ptr_test := proc() {
    p := Ptr.new(32) // allocate 32 bytes
    println("Pointer address: ", I64.to_str(p.data))

    // TODO: Ptr.set_zero(p, 32) requires 'mut self' - re-enable when mut args are supported
    // Ptr.set_zero(p, 32)

    q := Ptr.new(32)

    // TODO: Ptr.copy_to(p, q, 32) requires 'mut dest' - re-enable when mut args are supported
    // Ptr.copy_to(p, q, 32)

    r := Ptr.offset(p, 16)
    println("Offset pointer address: ", I64.to_str(r.data))

    Ptr.free(p)
    Ptr.free(q)
    // No need to free 'r', it shares memory with 'p'
}
// ptr_test() // TODO: re-enable when returning user-defined structs is supported
