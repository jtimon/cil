mode test

test_pointers_i64 := proc() {
    p := Ptr.new(I64) // allocate 32 bytes
    println("Pointer address: ", I64.to_str(p.c_ptr))

    Ptr.set_zero(p, 32)

    q := Ptr.new(I64)

    Ptr.copy_to(p, q, 32)

    r := Ptr.offset(p, 16)
    println("Offset pointer address: ", I64.to_str(r.c_ptr))

    // TODO actually free things after self hosting, when we move on from an interpreted arena (very wasteful, but feels like garbage collection for free)
    Ptr.delete(p)
    q.delete()
    // No need to free 'r', it shares memory with 'p'

    catch (err: AllocError) {
        println(loc(), "AllocError thrown:")
        println(err.msg)
    }
}
test_pointers_i64()
